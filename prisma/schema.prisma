// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Wallet {
  id        Int   @id @default(autoincrement())
  address   String   @unique
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Token {
  id        Int   @id @default(autoincrement())
  address   String   @unique
  name      String
  symbol    String
  decimals  Int
  totalSupply String
  txHash      String
  owner       String
  blockNumber BigInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DexPool {
  id        Int   @id @default(autoincrement())
  tokenA    String
  tokenASymbol String
  tokenAName String
  tokenB    String
  tokenBSymbol String
  tokenBName String
  amountA   String @db.VarChar(1000)
  amountB   String @db.VarChar(100)
  totalLiquidity String @db.VarChar(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  history DexPoolHistory[]

  @@unique([tokenA, tokenB])
}

model DexPoolHistory {
  id        Int   @id @default(autoincrement())
  txHash    String
  poolId    Int
  amountA   String @db.VarChar(100)
  amountB   String @db.VarChar(100)
  liquidity String @db.VarChar(100)
  timestamp BigInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  pool DexPool @relation(fields: [poolId], references: [id])
}